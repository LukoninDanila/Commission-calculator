<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.sbrf.commissions</groupId>
    <artifactId>calculator-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>calculator-service</name>
    <description>Service for calculate bank commission by payments</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc</artifactId>
            <version>8</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/libs/ojdbc7.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>3.6.3</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>2.2.4.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.5.12</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.9.8</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.6</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jooq.pro</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>3.7.2</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/libs/jooq-meta-3.7.2.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.jooq.pro</groupId>
            <artifactId>jooq</artifactId>
            <version>3.7.2</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/libs/jooq-3.7.2.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>org.jooq.pro</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>3.7.2</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/libs/jooq-codegen-3.7.2.jar</systemPath>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.6.RELEASE</version>
            </plugin>

            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>1.16.14.0</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.5.3</version>
                <configuration>
                    <propertyFile>src/main/resources/datasource.properties</propertyFile>
                </configuration>
                <!--<executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>-->
            </plugin>

            <plugin>

                <!-- Specify the maven code generator plugin -->
                <!-- Use org.jooq            for the Open Source Edition
                         org.jooq.pro        for commercial editions -->
                <groupId>org.jooq.pro</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.7.2</version>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <!-- Manage the plugin's dependency. In this example, we'll use a Oracle database -->
                <dependencies>
                    <dependency>
                        <groupId>com.oracle</groupId>
                        <artifactId>ojdbc</artifactId>
                        <version>8</version>
                        <scope>system</scope>
                        <systemPath>${project.basedir}/src/main/resources/libs/ojdbc7.jar</systemPath>
                    </dependency>
                </dependencies>

                <!-- Specify the plugin configuration.
                     The configuration format is the same as for the standalone code generator -->
                <configuration>

                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <driver>oracle.jdbc.OracleDriver</driver>
                        <url>jdbc:oracle:thin:@localhost:1521:orcl</url>
                        <user>eks_db</user>
                        <password>password</password>
                    </jdbc>

                    <!-- Generator parameters -->
                    <generator>
                        <database>
                            <name>org.jooq.util.oracle.OracleDatabase</name>
                            <includes>.*</includes>
                            <excludes>
                                UNUSED_TABLE # This table (unqualified name) should not be generated
                                | PREFIX_.* # Objects with a given prefix should not be generated
                                | SECRET_SCHEMA\.SECRET_TABLE # This table (qualified name) should not be generated
                                | SECRET_ROUTINE # This routine (unqualified name) ...
                            </excludes>

                            <!-- In case your database supports catalogs, e.g. SQL Server: -->
                            <!--<inputSchema>public</inputSchema>-->
                            <inputSchema>eks_db</inputSchema>
                        </database>
                        <target>
                            <packageName>ru.sbrf.commissions.calculatorservice.generated</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>